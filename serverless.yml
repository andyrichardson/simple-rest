service: example
provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  environment:
    ORG_TABLE: Org
    SERVICE_TABLE: Service

plugins:
  - serverless-offline
  - serverless-dynamodb-local
  - serverless-plugin-typescript

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: false
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

functions:
  app:
    handler: src/index.handler
    events:
      - http:
          method: ANY
          path: /{any+}
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Authorization
              - x-amzn-trace-id

resources:
  Resources:
    OrgTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.ORG_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    ServiceTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.SERVICE_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: org
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: org
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
